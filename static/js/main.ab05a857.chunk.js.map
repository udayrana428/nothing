{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","navtitle","type","id","home","onClick","togglemode","style","height","width","htmlFor","switchtxt","placeholder","Textform","useState","text","settext","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","heading2","split","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","abouttext","App","setmode","setswitchtxt","setalert","message","setTimeout","cls","document","body","classList","remove","console","log","add","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab05a857.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.navtitle}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  {props.home}\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.abouttext}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <div className=\"bg-primary rounded mx-2\" onClick={() => { props.togglemode('primary') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={() => { props.togglemode('success') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={() => { props.togglemode('warning') }} style={{height:'30px',width:'30px'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={() => { props.togglemode('danger') }} style={{height:'30px',width:'30px'}}></div>\r\n            </div>\r\n            <div className={`form-check form-switch mx-2 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} >\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.switchtxt}</label>\r\n            </div>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  navtitle: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n  navtitle: 'set title here',\r\n  abouttext: 'About1',\r\n  home: 'Home'\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick = () => {\r\n        if (text !== '') {\r\n            let newtext = text.toUpperCase()\r\n            settext(newtext)\r\n            props.showAlert('Converted to UpperCase', 'success')\r\n        }\r\n        else {\r\n            props.showAlert(`Plz enter some characters`, 'warning')\r\n        }\r\n    }\r\n    const handleloclick = () => {\r\n        if (text !== '') {\r\n            let newtext = text.toLowerCase()\r\n            settext(newtext)\r\n            props.showAlert('Converted to LowerCase', 'success')\r\n        }\r\n        else {\r\n            props.showAlert(`Plz enter some characters`, 'warning')\r\n        }\r\n    }\r\n    const handleonchange = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n    const [text, settext] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === \"light\" ? 'black' : 'white' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                        value={text}\r\n                        onChange={handleonchange}\r\n                        style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#445f97\", color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n                        className=\"form-control\"\r\n                        placeholder='Enter text here'\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"7\"\r\n                    ></textarea>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleupclick}>Convert to UpperCase</button>\r\n                    <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleloclick}>Convert to LowerCase</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"light\" ? 'black' : 'white' }}>\r\n                <h2>{props.heading2}</h2>\r\n                <p>Total words {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} | Total characters {text.length}</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toUpperCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [switchtxt, setswitchtxt] = useState(\"Enable Dark Mode\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  };\n  const removeClass=()=>{\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n  }\n  const togglemode = (cls) => {\n    removeClass()\n    console.log(cls)\n    document.body.classList.add('bg-'+cls)\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      setswitchtxt(\"Disable Dark Mode\");\n      document.body.style.backgroundColor = \"#1d254c\";\n      document.title = \"TextUtils - DarkMode\"\n      // document.body.style.color=\"white\"\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      setswitchtxt(\"Enable Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"TextUtils - LightMode\"\n      // document.body.style.color=\"black\"\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          navtitle=\"TextUtils\"\n          mode={mode}\n          togglemode={togglemode}\n          switchtxt={switchtxt}\n        />\n        {/* <Navbar/> */}\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About\n                mode={mode}\n              />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <Textform\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n                heading2=\"Your Text Summary\"\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}